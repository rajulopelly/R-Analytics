citation()
demo()
grDevices::adjustcolor()
grDevices::adjustcolor()
plot(cars)
print(raju)
raju<- 'rannn'
print(raju)
matrix<-matrix(c('1','2','3','4','5','6'),nrow = 2,ncol = 3,byrow = 3)
matrix
matrix<-matrix(c('1','2','3','4','5','6'),nrow = 2,ncol = 3,byrow = F)
matrix
matrix<-matrix(c('1','2','3','4','5','6'),nrow = 2,ncol = 3,byrow = T)
matrix
r<-data("iris")
w<-data("AirPassengers")
x<-cat(datastruct,file = 'iris,)
x<-cat(datastruct,file = 'iris)
x<-cat(datastruct,file = 'iris)
udh
print(r)
test<- "sandwich=bread-mustard+ketchup"
## Extracting values with substring in R
substring("HumptyDumpty sat on a wall",5,9)
z = c("may", "the", "rain", "shower","can")
substring(z, 2, 3) <- c("@", "#")
z
# paste function in R
paste('one',2,'three',4,'five')
# paste function in R with sep argument
paste('X',1:5,sep='')
# paste function in R with collapse argument
paste(c('one','two','three','four'),collapse=' and ')
# paste function in R with separator and collapse Argument
paste(c('X','Y'),1:5,sep='_',collapse=' and ')
# paste0() function in R with collapse agrument
paste0('X',1:5,collapse=",")
###Table Function in R - Frequency table in R & cross table in R
## Frequency table with table() function in R
table(iris$Species)
prop.table(iris$Species)
## Frequency table with condition using table function in R
table(iris$Sepal.Length>5.0,iris$Petal.Length>5.0)
prop.table(table(iris$Sepal.Length>5.0))*100
##2 way cross table in R
## cross tabulation gear * carb
table(mtcars$gear,mtcars$carb)
## strsplit function in R with space delimiter
mysentence<- "india won the worldcup on 2018"
strsplit(mysentence," ")
## strsplit function in R with / as delimiter
path <- "home/lincon/data/output.csv"
strsplit(path,"/")
## strsplit() function in R with regular expression
mysentence <- "mike19sana17are1siblings"
strsplit(mysentence, "[0-9]+")
strsplit(mysentence, "[0-8]+")
# with function in R
with(df, {c <- a + b; df;} )
#In with function, while executing the expression in an environment. It doesn't save the copy of data frame. so the addition of two columns will not be reflected in the output.
# with function in R
df$c<-with(df, c <- a + b)
df
###Aggregate() Function in R
#Aggregate() Function in R Splits the data into subsets, computes summary statistics for each subsets
#and returns the result in a group by form. Aggregate function in R is similar to group by in SQL.
#Syntax for Aggregate() Function in R:aggregate(x, by, FUN, simplify = TRUE)
#x->	an R object, mostly a data frame
#by->	a list of grouping elements, by which the subsets are grouped by
#FUN->	a function to compute the summary statistics which can be applied to all data subsets
#Simplify->	logical indicating the simplification of results
# Aggregate function in R with mean summary statistics
agg_mean <- aggregate(iris[,1:4],by=list(iris$Species),FUN=mean, na.rm=TRUE)
agg_mean
ea<-aggregate(iris[,1:4],by=list(iris$Species),FUN = sum,na.rm=T)
ea
# by() function in R with mean
mydata <- iris
by(mydata$Sepal.Length,list(mydata$Species),mean)
aggregate(mydata,by=mydata$Species,FUN = mean,na.rm=T)
aggregate(mydata,by=list(mydata$Species),FUN = mean,na.rm=T)
a<-aggregate(mydata,by=list(mydata$Species),FUN = mean,na.rm=T)
a
rm(mydata)
# by() function in R with mean
mydata <- iris
a<-aggregate(mydata,by=list(mydata$Species),FUN = mean,na.rm=T)
a<-aggregate(mydata[,1:4],by=list(mydata$Species),FUN = mean,na.rm=T)
a
# by() function in R with more than one list
mydata1<-mtcars
by(mydata1$hp,list(mydata1$gear,mydata1$cyl),mean)
###Union in R-or Vector and data frame
# union in R - Union of two vectors in R
x <- c(1:4)
y <- c(2:7)
union(x,y)
# which function in R for vector
x <- c(1,3,5,7,8)
which(x==3)
which(x>=7)
# which function in R for a data frame
which(women$height==66,arr.ind = FALSE)
which(women$height>=70,arr.ind = FALSE)
# subset() function in R with select specific columns
newdata<-subset(mtcars,mpg>=30, select=c(mpg,cyl,gear))
newdata
# subset() function in R with select option
newdata<-subset(mtcars,mpg>=30, select=mpg:drat)
newdata
